import 'dart:async';

import 'package:build/build.dart';

class WebviewBuilder implements Builder {
  @override
  Map<String, List<String>> get buildExtensions => {
        'web/index.html': [
          'web/index.html.temp',
          'web/flutter_bootstrapper.js'
        ],
      };

  @override
  Future<void> build(BuildStep buildStep) async {
    final inputId = buildStep.inputId;
    final contents = await buildStep.readAsString(inputId);

    // Modify index.html to include the bootstrapper script
    final updatedContent = contents.replaceFirst(
      '</head>',
      '  <script src="flutter_bootstrapper.js"></script>\n</head>',
    );

    final outputId = AssetId(inputId.package, 'web/index.html.temp');
    await buildStep.writeAsString(outputId, updatedContent);

    // Create the flutter_bootstrapper.js file
    final bootstrapperId = AssetId(inputId.package, 'web/flutter_bootstrapper.js');
    await buildStep.writeAsString(bootstrapperId, _bootstrapperTemplate());
  }

  String _bootstrapperTemplate() {
    return '''
// This file is generated by the flutter_vscode package.
// Do not edit this file manually.

(function () {
  const vscode = acquireVsCodeApi();

  window.addEventListener('message', (event) => {
    const message = event.data;
    // Handle messages from the extension
  });

  function sendMessage(message) {
    vscode.postMessage(message);
  }

  // Make the sendMessage function available to the Flutter app
  window.sendMessage = sendMessage;
})();
''';
  }
}

Builder webviewBuilder(BuilderOptions options) => WebviewBuilder();
